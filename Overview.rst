CREAM Functional Description
============================

The CREAM (Computing Resource Execution And Management) Service is a
simple, lightweight service that implements all the operations at the
Computing Element (CE) level; its well-defined WebService-based
interface and its implementation as an extension of the Java-Axis
servlet (running inside the Apache Tomcat container) provide
interoperability with clients written in any programming language and
running on any computer platform.

The CREAM interface is well-defined using the Web Service Description
Language (WSDL); anyone can generate his/her CREAM client by simply
filling in the stub code generated by WSDL parser (gSOAP for C/C++, Axis
for Java, Perl module for perl).

CREAM functionality:

-  Job Submission

   -  Possibility of direct staging of input sandbox files

   -  gLite JDL compliance (with CREAM-specific extensions)

   -  Support for batch and parallel jobs

-  Manual and automatic proxy delegation

-  Job Cancellation

-  Job Info with configurable level of verbosity and filtering based on
   submission time and/or job status

-  Job List

-  Job Suspension and Resume

-  Job output retrieval

-  Job Purge for terminated jobs

-  Possibility (for admin) to disable new submissions

-  Self limiting CREAM behavior: CREAM is able to protect itself if the
   load, memory usage, etc. is too high. This happens disabling new job
   submissions, while the other commands are still allowed

-  ARGUS or gJAF based authorization

-  Possibility to forward requirements to the batch system

-  Integration with APEL accounting systems

CREAM can be used

-  by the Workload Management System (WMS), via the ICE (Interface to
   CREAM Environment) service

-  by a generic client, e.g. an end-user willing to directly submit jobs
   to a CREAM CE. A C++ command line interface (CLI) is available
